Found 31 test(s).
Creating test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
Operations to perform:
  Synchronize unmigrated apps: corsheaders, messages, rest_framework, staticfiles
  Apply all migrations: accounts, admin, auth, companion_api, contenttypes, knox, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0001_initial... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying accounts.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying companion_api.0001_initial... OK
  Applying knox.0001_initial... OK
  Applying knox.0002_auto_20150916_1425... OK
  Applying knox.0003_auto_20150916_1526... OK
  Applying knox.0004_authtoken_expires... OK
  Applying knox.0005_authtoken_token_key... OK
  Applying knox.0006_auto_20160818_0932... OK
  Applying knox.0007_auto_20190111_0542... OK
  Applying knox.0008_remove_authtoken_salt... OK
  Applying sessions.0001_initial... OK
System check identified no issues (0 silenced).
test_doctor_can_login_when_registered (tests.test_accounts.test_doctor_views.TestViews)
Login: Doctor can login once registered ... ok
test_doctor_can_logout_with_valid_token_authorized (tests.test_accounts.test_doctor_views.TestViews)
Logout View: Doctor can logout when they have a valid token ... ok
test_doctor_can_register_with_correct_data (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor can register with correct data ... ok
test_doctor_cannot_login_when_not_registered (tests.test_accounts.test_doctor_views.TestViews)
Login: Doctor cannot login if not registered ... ok
test_doctor_cannot_logout_with_invalid_token_unauthorized (tests.test_accounts.test_doctor_views.TestViews)
Logout View: Doctor cannot logout when they do not have a valid token ... ok
test_doctor_cannot_register_with_existing_email (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor cannot register with an existing email (emails are unique) ... ok
test_doctor_cannot_register_with_invalid_email_format (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor cannot register with an invalid email format ... ok
test_doctor_cannot_register_with_no_data (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor cannot register with no data ... ok
test_doctor_cannot_register_with_no_email (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor cannot register with no email attribute ... ok
test_doctor_cannot_register_with_no_first_name (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor cannot register with no first_name attribute ... ok
test_doctor_cannot_register_with_no_password (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor cannot register with no password attribute ... ok
test_doctor_cannot_register_with_no_user (tests.test_accounts.test_doctor_views.TestViews)
Registration: Doctor cannot register with no User (every Doctor contains a User) ... ok
test_return_doctor_invalid_token_unauthorized (tests.test_accounts.test_doctor_views.TestViews)
User View: Invalid token means Doctor is unauthorized ... ok
test_return_doctor_no_token_unauthorized (tests.test_accounts.test_doctor_views.TestViews)
User View: If no token for the Doctor, we are unauthorized ... ok
test_return_doctor_valid_token_authorized (tests.test_accounts.test_doctor_views.TestViews)
User View: Return a valid token for the Doctor when authorized ... ok
test_patient_can_login_when_registered (tests.test_accounts.test_patient_views.TestViews)
Login: Patient can login once registered ... ok
test_patient_can_logout_with_valid_token_authorized (tests.test_accounts.test_patient_views.TestViews)
Logout View: Patient can logout when they have a valid token ... ok
test_patient_can_register_with_correct_data (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient can register with correct data ... ok
test_patient_cannot_login_when_not_registered (tests.test_accounts.test_patient_views.TestViews)
Login: Patient cannot login if not registered ... ok
test_patient_cannot_logout_with_invalid_token_unauthorized (tests.test_accounts.test_patient_views.TestViews)
Logout View: Patient cannot logout when they do not have a valid token ... ok
test_patient_cannot_register_with_existing_email (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient cannot register with an existing email (emails are unique) ... ok
test_patient_cannot_register_with_invalid_email_format (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient cannot register with an invalid email format ... ok
test_patient_cannot_register_with_no_data (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient cannot register with no data ... ok
test_patient_cannot_register_with_no_email (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient cannot register with no email attribute ... ok
test_patient_cannot_register_with_no_first_name (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient cannot register with no first_name attribute ... ok
test_patient_cannot_register_with_no_password (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient cannot register with no password attribute ... ok
test_patient_cannot_register_with_no_user (tests.test_accounts.test_patient_views.TestViews)
Registration: Patient cannot register with no User (every Patient contains a User) ... ok
test_return_patient_invalid_token_unauthorized (tests.test_accounts.test_patient_views.TestViews)
User View: Invalid token means Patient is unauthorized ... ok
test_return_patient_no_token_unauthorized (tests.test_accounts.test_patient_views.TestViews)
User View: If no token for the Patient, we are unauthorized ... ok
test_return_patient_valid_token_authorized (tests.test_accounts.test_patient_views.TestViews)
User View: Return a valid token for the Patient when authorized ... ok
test_person_attribute (tests.test_companion_api.test_models.PersonTestCase)
Check that the people are properly stored in the database ... ok

----------------------------------------------------------------------
Ran 31 tests in 2.448s

OK
Destroying test database for alias 'default' ('file:memorydb_default?mode=memory&cache=shared')...
